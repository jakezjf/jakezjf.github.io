---
layout:     post
title:      "java volatile 原理"
subtitle:   "volatile 原理"
date:       2016-08-24
author:     "JianFeng"
header-img: ""
catalog: true
tags:
    - java
    - volatile
    - 多线程
    - 并发
---

> 本篇将介绍volatile的知识

## volatile

### volatile的定义
Java编程语言允许线程访问共享的变量，为了确保共享变量能被准确和一致地更新，线程应该确保通过排它锁单独获取这个变量。在java中，当一个字段被声明成volatile，那么所有的线程看到该变量的值是一致的。

### volatile的实现原理
JVM(Java虚拟机)是Java程序运行的必要环境，Java的代码在经过JVM编译后，产生Java字节码文件，通过Java的类加载器，可以将Java字节码加载到JVM中，JVM执行字节码文件，将其转化为汇编指令并在CPU上执行。

经过volatile修饰的变量，在被线程进行读写操作时，生成的汇编指令前会多出一个Lock前缀，Lock指令有什么作用呢？

1.将当前处理器的缓存行写入内存

2.写入内存的操作会使其他处理器缓存了该内存地址的数据无效

3.其他处理器该内存地址的数据是无效，所以再次对该变量进行读写操作时，会被要求重新从内存将数据读入缓存

volatile通过使用Lock前缀指令，使处理器缓存写入内存；一个处理器的缓存写入内存，会导致其他处理器的缓存无效，从而确保了所有线程看到被volatile声明的变量的值是一致的。




### volatile的优势

1.拥有更大的程序吞吐量

2.容易理解，不需要太高的学习成本

3.程序的伸缩性较好

4.用较少的代码实现多线程

### volatile的缺点

1.程序较难设计

2.容易出现问题

3.volatile仅仅能保证变量的可见性，但不能确保原子性(synchronized可确保原子性)








